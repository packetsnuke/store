(function() {  "use strict";

  /**
   * WooCommerce PDF Product Voucher Templates Customizer Preview scripts
   *
   * @since 3.0.0
   */
  (function(wp, $) {
    var api, areaSelect, bindFieldStyleUpdates, calculateScaledFontSize, ias, preview, redrawVoucherFieldPlaceholders, removeImgAreaSelect, setFieldCssValue, setFontSize, voucherFieldAreaSelect;
    if (!wp || !wp.customize) {
      return;
    }
    api = wp.customize;
    preview = wc_voucher_template_preview;
    ias = void 0;
    redrawVoucherFieldPlaceholders = function() {
      var $image, image;
      image = api('wc_voucher_template_voucher_primary_image').get();
      $image = $('#voucher-image img');
      if (image.width !== $image.width()) {
        preview.image_scale = $image.width() / image.width;
      } else {
        preview.image_scale = 1;
      }
      setFontSize('voucher', calculateScaledFontSize(api('wc_voucher_template_voucher_font_size').get()));
      return $.each(preview.voucher_fields, function(index, field_id) {
        var $field, font_size, font_size_prop, pos_atts, position;
        $field = $('#voucher #' + field_id);
        if ('' === $image.attr('src')) {
          return $field.hide();
        }
        position = api('wc_voucher_template_' + field_id + '_pos').get();
        position = position ? position.split(',').map((function(n) {
          return parseInt(n, 10) * preview.image_scale;
        })) : null;
        if (position) {
          pos_atts = {
            'left': position[0] + 'px',
            'top': position[1] + 'px',
            'width': position[2] + 'px',
            'height': position[3] + 'px'
          };
          $field.css(pos_atts).show();
          font_size = null;
          font_size_prop = api('wc_voucher_template_' + field_id + '_font_size');
          if (font_size_prop) {
            font_size = font_size_prop.get();
          }
          if (font_size) {
            return setFontSize(field_id, calculateScaledFontSize(font_size));
          }
        } else {
          return $field.hide();
        }
      });
    };
    calculateScaledFontSize = function(font_size) {
      var font_scale;
      font_scale = api('wc_voucher_template_voucher_image_dpi').get() / 72 * preview.image_scale;
      return font_size * font_scale;
    };
    setFontSize = function(field_id, value) {
      var config;
      config = preview.css_config.font_size;
      return setFieldCssValue(field_id, config, value);
    };
    setFieldCssValue = function(field_id, config, value) {
      var css_value;
      css_value = value ? config.value.replace('{$value}', value) : '';
      return $('#' + field_id).css(config.property, css_value);
    };
    removeImgAreaSelect = function() {
      $('#voucher-image img').imgAreaSelect({
        remove: true
      });
      return redrawVoucherFieldPlaceholders();
    };
    voucherFieldAreaSelect = function(field_id, aspect_ratio) {
      var $field, coords, image, position;
      if (aspect_ratio == null) {
        aspect_ratio = null;
      }
      if (!$('#voucher-image img').attr('src')) {
        return;
      }
      removeImgAreaSelect();
      $field = $('#voucher #' + field_id);
      $field.hide();
      position = api('wc_voucher_template_' + field_id + '_pos').get();
      image = api('wc_voucher_template_voucher_primary_image').get();
      coords = position ? position.split(',').map((function(n) {
        return parseInt(n, 10);
      })) : [null, null, null, null];
      return ias = $('#voucher-image img').imgAreaSelect({
        show: true,
        handles: true,
        instance: true,
        imageWidth: image.width,
        imageHeight: image.height,
        x1: coords[0],
        y1: coords[1],
        x2: coords[0] + coords[2],
        y2: coords[1] + coords[3],
        aspectRatio: aspect_ratio,
        onSelectEnd: function(img, selection) {
          areaSelect(selection, field_id);
        }
      });
    };
    areaSelect = function(selection, field_id) {
      var position;
      position = [selection.x1, selection.y1, selection.width, selection.height];
      return api.preview.send('voucher:update-position:' + field_id, position.join(','));
    };
    bindFieldStyleUpdates = function(field_id) {
      if (!preview.css_config) {
        return;
      }
      return $.each(preview.css_config, function(setting_key, config) {
        var updateFieldCssValue;
        if (!config.property) {
          return;
        }
        if (!config.value) {
          config.value = '{$value}';
        }
        updateFieldCssValue = function(value) {
          if ('font_size' === setting_key) {
            value = '0' === value ? null : value;
            if (value) {
              value = calculateScaledFontSize(value);
            }
          }
          return setFieldCssValue(field_id, config, value);
        };
        return api('wc_voucher_template_' + field_id + '_' + setting_key, function(setting) {
          updateFieldCssValue(setting.get());
          return setting.bind(updateFieldCssValue);
        });
      });
    };
    api('wc_voucher_template_voucher_primary_image', function(setting) {
      return setting.bind(function(newval) {
        return $('#voucher-image img').prop('src', newval.src).load(function() {
          if (!newval.src) {
            $('body').addClass('voucher-no-image');
          } else {
            $('body').removeClass('voucher-no-image');
          }
          return redrawVoucherFieldPlaceholders();
        });
      });
    });
    api('wc_voucher_template_voucher_additional_image', function(setting) {
      return setting.bind(function(newval) {
        return $('#voucher-additional-image img').prop('src', newval);
      });
    });
    api('wc_voucher_template_voucher_image_dpi', function(setting) {
      return setting.bind(redrawVoucherFieldPlaceholders);
    });
    return $(function() {
      api.preview.bind('voucher:start-positioning', function(data) {
        return voucherFieldAreaSelect(data.field_id, data.aspect_ratio);
      });
      api.preview.bind('voucher:stop-positioning', function(val) {
        return removeImgAreaSelect();
      });
      api.preview.bind('voucher:remove-position', function(val) {
        return redrawVoucherFieldPlaceholders();
      });
      api.preview.bind('voucher:update-position', function(val) {
        console.log('update...', val);
        return redrawVoucherFieldPlaceholders();
      });
      $(window).resize(function() {
        return redrawVoucherFieldPlaceholders();
      });
      setTimeout(function() {
        redrawVoucherFieldPlaceholders();
        bindFieldStyleUpdates('voucher');
        return $.each(preview.voucher_fields, function(index, field_id) {
          return bindFieldStyleUpdates(field_id);
        });
      }, 0);
      return $('#voucher').click('.js-voucher-field-pos', function(event) {
        return api.preview.send('voucher:click-position:' + event.target.id);
      });
    });
  })(window.wp, jQuery);

}).call(this);


